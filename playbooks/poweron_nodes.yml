###
# Copyright (2017) Hewlett Packard Enterprise Development LP
#
# Licensed under the Apache License, Version 2.0 (the "License");
# You may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
### 
---
#######################################################################
#
# Play 1: Power on OCP nodes
#
#######################################################################
- name: Deploy openshift nodes
  hosts: ocp
  gather_facts: false

  tasks:

# specifying a network causes vmware_guest to initiate a customization, which is not supported with the type of OS wew deploy
#        networks: "{{ networks }}"
    - name: Power on OCP nodes
      delegate_to: localhost
      vmware_guest:
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        validate_certs: "{{ vcenter_validate_certs }}"
        datacenter: "{{ datacenter }}"
        folder: "{{ datacenter }}/vm/{{ cluster_name }}"
        name: "{{ inventory_hostname }}"
        state: poweredon
      register: res

    - name: Wait for Port 22. It may take a few minutes (~2mns)
      wait_for:
        port: 22
        host: "{{ inventory_hostname }}"
        delay: 2
        state: started
        timeout: 300
      delegate_to: localhost

    - name: "Waiting for openshift api server port on master nodes. (~10 to 15mns)"
      delegate_to: localhost
      wait_for:
        port: "{{ initial_port_check }}"
        host: "{{ inventory_hostname }}"
        state: started
        timeout: 10
      failed_when: false
      register: res
      delay: 10
      retries:  "{{ ( 1 + initial_port_check_timeout | int / 10 ) | int }}"
      until: res.state is defined and res.state == "started"
